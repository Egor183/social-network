{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","styles","statusContainer","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","value","currentTarget","ProfileDataForm","reduxForm","form","handleSubmit","profile","error","onSubmit","createField","Input","required","Textarea","Object","keys","contacts","map","key","contactsFormsContainer","contactFormName","formSummaryError","ProfileData","onEditMode","isOwner","meId","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactName","contactValue","onClick","Contact","s","contact","ProfileInfo","changeAvatar","saveProfile","Preloader","descriptionBlock","userAvatar","src","photos","large","UserAvatar","alt","type","target","files","length","then","offEditMode","initialValues","Post","item","message","likesCount","maxLength10","maxLengthCreator","TextAreaReduxForm","Field","placeholder","name","component","validate","MyPosts","React","memo","addPost","postsElements","posts","elem","id","postsBlock","formData","post","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","action","addPostActionCreator","Profile","ProfileContainer","newUserId","this","match","params","userId","Number","history","push","getUserProfile","getStatus","getProfile","prevProps","Component","compose","auth","isAuth","setUserProfile","withRouter"],"mappings":"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","file":"static/js/3.dd101671.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3hRaE\",\"userAvatar\":\"ProfileInfo_userAvatar__1Lg6K\",\"statusContainer\":\"ProfileInfo_statusContainer__1SlT6\",\"contact\":\"ProfileInfo_contact__2uZRz\",\"contactsFormsContainer\":\"ProfileInfo_contactsFormsContainer__3tK3n\",\"contactFormName\":\"ProfileInfo_contactFormName__2-Vc0\",\"formSummaryError\":\"ProfileInfo_formSummaryError__oVWCD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3m8L_\",\"posts\":\"MyPosts_posts__3J07l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2GrpW\"};","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport styles from \"./ProfileInfo.module.css\";\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    let value = e.currentTarget.value;\n    setStatus(value);\n  };\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  return (\n    <div className={styles.statusContainer}>\n      <b>Status:</b>\n\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>{props.status || \"your statue could be here\"}</span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            autoFocus={true}\n            onBlur={deactivateEditMode}\n            onChange={onStatusChange}\n            value={status !== null ? status : \"your status...\"}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport { createField, Input, Textarea } from \"../../Common/FormsControls/FormsControls\";\nimport { required } from \"../../../utils/validators/validator\";\nimport styles from \"./ProfileInfo.module.css\";\n\nconst ProfileData = ({ handleSubmit, profile, error }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <b>Full name:</b>\n        {createField(\"text\", \"fullName\", \"fullName\", Input, [required])}\n      </div>\n\n      <div>\n        <b>Looking for a job:</b>\n        {createField(\"checkbox\", \"lookingForAJob\", \"lookingForAJob\", Input)}\n      </div>\n\n      <div>\n        <b>Professional skills:</b>\n        {createField(null, \"lookingForAJobDescription\", \"lookingForAJobDescription\", Textarea, [required])}\n      </div>\n\n      <div>\n        <b>About me:</b>\n        {createField(null, \"aboutMe\", \"aboutMe\", Textarea, [required])}\n      </div>\n\n      <div>\n        <b>Contacts:</b>\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <div key={key} className={styles.contactsFormsContainer}>\n              <b className={styles.contactFormName}>{key}</b> {createField(\"text\", `${key}`, `contacts[${key}]`, Input)}\n            </div>\n          );\n        })}\n      </div>\n      {error && <div className={styles.formSummaryError}>{error}</div>}\n      <div>\n        <button>Save</button>\n      </div>\n    </form>\n  );\n};\n\nconst ProfileDataForm = reduxForm({\n  form: \"profileData\",\n})(ProfileData);\n\nexport default ProfileDataForm;\n","import React, { useState } from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../Common/Preaolader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport UserAvatar from \"../../../assets/images/1505926268182046858.png\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, meId, changeAvatar, saveProfile }) => {\n  let [editMode, setEditMode] = useState(false);\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  const onSubmit = (profile) => {\n    saveProfile(profile).then(() => {\n      setEditMode(false);\n    });\n  };\n\n  const avatarSelected = (e) => {\n    if (e.target.files.length) {\n      changeAvatar(e.target.files[0]);\n    }\n  };\n\n  return (\n    <div>\n      <div className={s.descriptionBlock}>\n        <img className={s.userAvatar} src={profile.photos.large || UserAvatar} alt=\"фото\" />\n        {isOwner === meId ? <input type=\"file\" onChange={avatarSelected} /> : null}\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n        {editMode ? (\n          <ProfileDataForm\n            onSubmit={onSubmit}\n            offEditMode={() => setEditMode(false)}\n            initialValues={profile}\n            profile={profile}\n          />\n        ) : (\n          <ProfileData profile={profile} isOwner={isOwner} meId={meId} onEditMode={() => setEditMode(true)} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ProfileData = ({ profile, onEditMode, isOwner, meId }) => {\n  return (\n    <div>\n      <div>\n        <b>Full name:</b>\n        {profile.fullName}\n      </div>\n      <div>\n        <b>About me:</b>\n        {profile.aboutMe || \"there is no information about me\"}\n      </div>\n      <div>\n        <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\n      </div>\n      {profile.lookingForAJob && (\n        <div>\n          <b>Professional skills:</b> {profile.lookingForAJobDescription}\n        </div>\n      )}\n      <div>\n        <b>Contacts:</b>\n        {Object.keys(profile.contacts).map((key) => {\n          return <Contact key={key} contactName={key} contactValue={profile.contacts[key]} />;\n        })}\n      </div>\n      {isOwner === meId ? <button onClick={onEditMode}>Edit mode</button> : null}\n    </div>\n  );\n};\n\nconst Contact = ({ contactName, contactValue }) => {\n  return (\n    <div className={s.contact}>\n      <b>{contactName}:</b> {contactValue}\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRkUm8Lemuzy9dc-h2pqUD6pawuW0QK_bKwxg&usqp=CAU\"\r\n        alt=\"\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>like:</span>\r\n        {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field placeholder=\"Send post\" name=\"post\" component={Textarea} validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst TextAreaReduxForm = reduxForm({\r\n  form: \"addPost\",\r\n})(AddPostForm);\r\n\r\nconst MyPosts = React.memo(({ addPost, posts }) => {\r\n  const onSubmit = (formData) => {\r\n    addPost(formData.post);\r\n  };\r\n  let postsElements = posts.map((elem) => <Post message={elem.message} likesCount={elem.likesCount} key={elem.id} />);\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <TextAreaReduxForm onSubmit={onSubmit} />\r\n      <div>New posts</div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (formData) => {\r\n      let action = addPostActionCreator(formData);\r\n      dispatch(action);\r\n    },\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = ({ profile, status, updateStatus, isOwner, meId, changeAvatar, saveProfile }) => {\n  return (\n    <div>\n      <ProfileInfo\n        profile={profile}\n        status={status}\n        updateStatus={updateStatus}\n        isOwner={isOwner}\n        meId={meId}\n        changeAvatar={changeAvatar}\n        saveProfile={saveProfile}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  changeAvatar,\n  getStatus,\n  getUserProfile,\n  saveProfile,\n  setUserProfile,\n  updateStatus,\n} from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  getProfile() {\n    let newUserId = this.props.match.params.userId;\n    newUserId = Number(newUserId);\n    if (!newUserId) {\n      newUserId = this.props.meId;\n\n      if (!newUserId) {\n        return this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getUserProfile(newUserId);\n    this.props.getStatus(newUserId);\n  }\n\n  componentDidMount() {\n    this.getProfile();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.getProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        isOwner={Number(this.props.match.params.userId)}\n        meId={this.props.meId}\n        profile={this.props.profile}\n        aboutMe={this.props.aboutMe}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n        changeAvatar={this.props.changeAvatar}\n        saveProfile={this.props.saveProfile}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    meId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    setUserProfile,\n    getUserProfile,\n    getStatus,\n    updateStatus,\n    changeAvatar,\n    saveProfile,\n  }),\n  withRouter\n)(ProfileContainer);\n"],"sourceRoot":""}