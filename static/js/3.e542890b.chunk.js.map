{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","value","currentTarget","ProfileInfo","profile","aboutMe","className","s","descriptionBlock","src","photos","large","alt","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","TextAreaReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","MyPosts","React","memo","addPost","postsElements","posts","map","elem","key","id","postsBlock","formData","post","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","action","addPostActionCreator","Profile","ProfileContainer","this","getProfile","prevProps","newUserId","match","params","userId","Number","meId","history","push","getUserProfile","getStatus","isAuth","to","Component","compose","auth","setUserProfile","withRouter"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,iBAAmB,wC,oBCArCD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,+HCwCVC,EAvCgB,SAACC,GAAW,IAAD,EACVC,oBAAS,GADC,mBACnCC,EADmC,KACzBC,EADyB,OAEdF,mBAASD,EAAMI,QAFD,mBAEnCA,EAFmC,KAE3BC,EAF2B,KAuBxC,OALAC,qBAAU,WACRD,EAAUL,EAAMI,UACf,CAACJ,EAAMI,SAIR,8BACIF,GACA,6BACE,0BAAMK,cAvBW,WACvBJ,GAAY,KAsBkCH,EAAMI,QAAU,8BAG3DF,GACC,6BACE,2BAAOM,WAAW,EAAMC,OAxBL,WACzBN,GAAY,GACZH,EAAMU,aAAaN,IAsBuCO,SAnBrC,SAACC,GACtB,IAAIC,EAAQD,EAAEE,cAAcD,MAC5BR,EAAUQ,IAiB0EA,MAAgB,OAATT,EAAgBA,EAAS,sBCXzGW,EAlBK,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,QAASZ,EAAoC,EAApCA,OAAQM,EAA4B,EAA5BA,aAAcO,EAAc,EAAdA,QACpD,OAAKD,EAIH,6BACE,yBAAKE,UAAWC,IAAEC,kBAChB,yBAAKC,IAAKL,EAAQM,OAAOC,MAAOC,IAAI,6BACpC,kBAAC,EAAD,CACEpB,OAAQA,EACRM,aAAcA,IAEhB,2BAAIO,KAVD,kBAACQ,EAAA,EAAD,O,4CCYIC,EAhBF,SAAC1B,GACZ,OACE,yBAAKkB,UAAWC,IAAEQ,MAChB,yBACEN,IAAI,wGACJG,IAAI,KAELxB,EAAM4B,QACP,6BACE,uCACC5B,EAAM6B,c,iCCNTC,EAAcC,YAAiB,IAe/BC,EAAoBC,YAAU,CAClCC,KAAM,WADkBD,EAbN,SAACjC,GACnB,OACE,0BAAMmC,SAAUnC,EAAMoC,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAOC,YAAY,YAAYC,KAAK,OAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUb,MAEvF,6BACE,iDAyBOc,EAfCC,IAAMC,MAAK,YAAyB,IAAtBC,EAAqB,EAArBA,QAIxBC,EAJ6C,EAAZC,MAIXC,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAMvB,QAASuB,EAAKvB,QAASC,WAAYsB,EAAKtB,WAAYuB,IAAKD,EAAKE,QAC5G,OACE,yBAAKnC,UAAWC,IAAEmC,YAChB,wCACA,kBAACtB,EAAD,CAAmBG,SAPN,SAACoB,GAChBR,EAAQQ,EAASC,SAOf,0CACA,yBAAKtC,UAAWC,IAAE8B,OAAQD,O,QCdjBS,EAFUC,aAPD,SAACC,GACvB,MAAO,CACLV,MAAOU,EAAMC,YAAYX,MACzBY,YAAaF,EAAMC,YAAYC,gBAZR,SAACC,GAC1B,MAAO,CACLf,QAAS,SAACQ,GACR,IAAIQ,EAASC,YAAqBT,GAClCO,EAASC,OAYUL,CAA6Cd,GCPvDqB,EATC,SAAC,GAAgD,IAA9CjD,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,QAASb,EAA2B,EAA3BA,OAAQM,EAAmB,EAAnBA,aAC3C,OACE,6BACE,kBAAC,EAAD,CAAaM,QAASA,EAASC,QAASA,EAASb,OAAQA,EAAQM,aAAcA,IAC/E,kBAAC,EAAD,Q,cCDAwD,E,kLAEFC,KAAKC,e,yCAGYC,GACjBF,KAAKC,e,mCAIL,IAAIE,EAAYH,KAAKnE,MAAMuE,MAAMC,OAAOC,OAExC,KADAH,EAAYI,OAAOJ,OAEjBA,EAAYH,KAAKnE,MAAM2E,MAErB,OAAOR,KAAKnE,MAAM4E,QAAQC,KAAK,UAG/BV,KAAKnE,MAAMyE,SAAWH,IACxBH,KAAKnE,MAAM8E,eAAeR,GAC1BH,KAAKnE,MAAM+E,UAAUT,M,+BAKvB,OAAKH,KAAKnE,MAAMgF,QAA8B,OAApBb,KAAKnE,MAAMyE,OAEnC,kBAAC,EAAD,iBACMN,KAAKnE,MADX,CAEEgB,QAASmD,KAAKnE,MAAMgB,QACpBC,QAASkD,KAAKnE,MAAMiB,QACpBb,OAAQ+D,KAAKnE,MAAMI,OACnBM,aAAcyD,KAAKnE,MAAMU,gBAP8B,kBAAC,IAAD,CAAUuE,GAAG,e,GAzB7CpC,IAAMqC,WAiDtBC,sBACbzB,aAZoB,SAACC,GACrB,MAAO,CACL3C,QAAS2C,EAAMC,YAAY5C,QAC3BC,QAAS0C,EAAMC,YAAY3C,QAC3Bb,OAAQuD,EAAMC,YAAYxD,OAC1BuE,KAAMhB,EAAMyB,KAAKX,OACjBO,OAAQrB,EAAMyB,KAAKJ,OACnBP,OAAQd,EAAMC,YAAYa,UAKH,CACvBY,mBACAP,mBACAC,cACArE,mBAEF4E,IAPaH,CAQbjB","file":"static/js/3.e542890b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3hRaE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3m8L_\",\"posts\":\"MyPosts_posts__3J07l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2GrpW\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    let value = e.currentTarget.value;\r\n    setStatus(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"your statue could be here\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status!==null ? status : \"your status...\"} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../Common/Preaolader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, aboutMe }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} alt=\"фото\" />\r\n        <ProfileStatusWithHooks\r\n          status={status}\r\n          updateStatus={updateStatus}\r\n        />\r\n        <p>{aboutMe}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRkUm8Lemuzy9dc-h2pqUD6pawuW0QK_bKwxg&usqp=CAU\"\r\n        alt=\"\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>like:</span>\r\n        {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field placeholder=\"Send post\" name=\"post\" component={Textarea} validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst TextAreaReduxForm = reduxForm({\r\n  form: \"addPost\",\r\n})(AddPostForm);\r\n\r\nconst MyPosts = React.memo(({ addPost, posts }) => {\r\n  const onSubmit = (formData) => {\r\n    addPost(formData.post);\r\n  };\r\n  let postsElements = posts.map((elem) => <Post message={elem.message} likesCount={elem.likesCount} key={elem.id} />);\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <TextAreaReduxForm onSubmit={onSubmit} />\r\n      <div>New posts</div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (formData) => {\r\n      let action = addPostActionCreator(formData);\r\n      dispatch(action);\r\n    },\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = ({ profile, aboutMe, status, updateStatus }) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={profile} aboutMe={aboutMe} status={status} updateStatus={updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatus, getUserProfile, setUserProfile, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.getProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    this.getProfile();\r\n  }\r\n\r\n  getProfile() {\r\n    let newUserId = this.props.match.params.userId;\r\n    newUserId = Number(newUserId);\r\n    if (!newUserId) {\r\n      newUserId = this.props.meId;\r\n      if (!newUserId) {\r\n        return this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    if (this.props.userId !== newUserId) {\r\n      this.props.getUserProfile(newUserId);\r\n      this.props.getStatus(newUserId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isAuth && this.props.userId===null) return <Redirect to=\"/login\" />;\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        aboutMe={this.props.aboutMe}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    aboutMe: state.profilePage.aboutMe,\r\n    status: state.profilePage.status,\r\n    meId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    userId: state.profilePage.userId,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setUserProfile,\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}