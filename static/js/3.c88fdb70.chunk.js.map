{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","styles","statusContainer","input","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","value","currentTarget","s","inputStyle","ProfileDataForm","reduxForm","form","handleSubmit","profile","error","onSubmit","inputWrapper","createField","Input","required","checkbox","checkboxWrapper","textareaWrapper","cx","profScills","Textarea","Object","keys","contacts","map","key","contactsFormsContainer","contactFormName","formSummaryError","commonButton","ProfileData","categoryName","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactName","contactValue","Contact","contact","ProfileInfo","isOwner","meId","changeAvatar","saveProfile","visibility","setVisibility","changeVisibility","profileInfoContainer","userAvatarContainer","onMouseLeave","onMouseEnter","userAvatar","src","photos","large","UserAvatar","alt","inputFileWrapper","inputFile","type","target","files","length","infoContainer","initialValues","Post","item","small","usersPhoto","postWriterInformation","writerName","message","TextAreaReduxForm","Field","placeholder","name","component","validate","textarea","buttonWrapper","MyPosts","React","memo","addPost","posts","postsElements","elem","likesCount","id","myPostsName","formData","dispatch","post","reset","MyPostsContainer","connect","state","profilePage","newPostText","action","addPostActionCreator","Profile","Preloader","ProfileContainer","newUserId","this","match","params","userId","Number","history","push","getUserProfile","getStatus","getProfile","prevProps","Component","compose","auth","isAuth","setUserProfile","withRouter"],"mappings":"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","file":"static/js/3.c88fdb70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3hRaE\",\"profileInfoContainer\":\"ProfileInfo_profileInfoContainer__ckiB9\",\"userAvatarContainer\":\"ProfileInfo_userAvatarContainer__3Gvs5\",\"inputFileWrapper\":\"ProfileInfo_inputFileWrapper__1ZWvP\",\"inputFile\":\"ProfileInfo_inputFile__30AYA\",\"categoryName\":\"ProfileInfo_categoryName__wvcC4\",\"userAvatar\":\"ProfileInfo_userAvatar__1Lg6K\",\"infoContainer\":\"ProfileInfo_infoContainer__2WBTo\",\"statusContainer\":\"ProfileInfo_statusContainer__1SlT6\",\"editMode\":\"ProfileInfo_editMode__1m-f5\",\"contact\":\"ProfileInfo_contact__2uZRz\",\"contactsFormsContainer\":\"ProfileInfo_contactsFormsContainer__3tK3n\",\"textareaWrapper\":\"ProfileInfo_textareaWrapper__2NAVj\",\"saveButton\":\"ProfileInfo_saveButton__2bCN_\",\"contactFormName\":\"ProfileInfo_contactFormName__2-Vc0\",\"formSummaryError\":\"ProfileInfo_formSummaryError__oVWCD\",\"checkboxWrapper\":\"ProfileInfo_checkboxWrapper__2qpu0\",\"inputWrapper\":\"ProfileInfo_inputWrapper__2VeSa\",\"input\":\"ProfileInfo_input__UDSRV\",\"profScills\":\"ProfileInfo_profScills__2akBC\",\"status\":\"ProfileInfo_status__1THLR\",\"checkbox\":\"ProfileInfo_checkbox__2i-T5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2GrpW\",\"postWriterInformation\":\"Post_postWriterInformation__3_Kh1\",\"writerName\":\"Post_writerName__35IB5\"};","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport styles from \"./ProfileInfo.module.css\";\nimport s from \"./../../Common/FormsControls/FormsControls.module.css\";\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    let value = e.currentTarget.value;\n    setStatus(value);\n  };\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  return (\n    <div className={styles.statusContainer}>\n      <span className={props.editMode ? styles.input : styles.status}>Status:</span>\n\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>{props.status || \"your statue could be here\"}</span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            autoFocus={true}\n            onBlur={deactivateEditMode}\n            onChange={onStatusChange}\n            value={status !== null ? status : \"your status...\"}\n            className={s.inputStyle}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport { createField, Input, Textarea } from \"../../Common/FormsControls/FormsControls\";\nimport { required } from \"../../../utils/validators/validator\";\nimport styles from \"./ProfileInfo.module.css\";\nimport s from \"../MyPosts/MyPosts.module.css\";\nimport \"../../Common/FormsControls/checkboxStyledSquare.css\";\nimport cx from \"classnames\";\n\nconst ProfileData = ({ handleSubmit, profile, error }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={styles.inputWrapper}>\n        <span className={styles.input}>Full name:</span>\n        {createField(\"text\", \"fullName\", \"fullName\", Input, [required])}\n      </div>\n\n      <div className={styles.checkbox}>\n        <span className={styles.status}>Looking for a job:</span>\n        <div className={styles.checkboxWrapper}>\n          {createField(\"checkbox\", \"lookingForAJob\", \"lookingForAJob\", Input, null, null, \"looking\")}\n        </div>\n      </div>\n\n      <div className={styles.textareaWrapper}>\n        <span className={cx(styles.input, styles.profScills)}>Professional skills:</span>\n        {createField(null, \"lookingForAJobDescription\", \"lookingForAJobDescription\", Textarea, [required])}\n      </div>\n\n      <div className={styles.textareaWrapper}>\n        <span className={styles.input}>About me:</span>\n        {createField(null, \"aboutMe\", \"aboutMe\", Textarea, [required])}\n      </div>\n\n      <div>\n        <span className={styles.input}>Contacts:</span>\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <div key={key} className={styles.contactsFormsContainer}>\n              <span className={styles.contactFormName}>{key}</span>{\" \"}\n              {createField(\"text\", `${key}`, `contacts[${key}]`, Input)}\n            </div>\n          );\n        })}\n      </div>\n      {error && <div className={styles.formSummaryError}>{error}</div>}\n      <div>\n        <button className={s.commonButton}>Save</button>\n      </div>\n    </form>\n  );\n};\n\nconst ProfileDataForm = reduxForm({\n  form: \"profileData\",\n})(ProfileData);\n\nexport default ProfileDataForm;\n","import React, { useState } from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport UserAvatar from \"../../../assets/images/defaultuser.png\";\nimport ProfileDataForm from \"./ProfileDataForm\";\nimport styles from \"./ProfileInfo.module.css\";\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  meId,\n  changeAvatar,\n  saveProfile,\n  editMode,\n  setEditMode,\n}) => {\n  const [visibility, setVisibility] = useState(false);\n\n  const changeVisibility = (visibility) => {\n    visibility ? setVisibility(false) : setVisibility(true);\n  };\n\n  const onSubmit = (profile) => {\n    saveProfile(profile);\n  };\n\n  const avatarSelected = (e) => {\n    if (e.target.files.length) {\n      changeAvatar(e.target.files[0]);\n    }\n  };\n\n  return (\n    <div className={s.profileInfoContainer}>\n      <div\n        className={s.userAvatarContainer}\n        onMouseLeave={() => changeVisibility(visibility)}\n        onMouseEnter={() => changeVisibility(visibility)}\n      >\n        <img className={s.userAvatar} src={profile.photos.large || UserAvatar} alt=\"фото\" />\n        {isOwner === meId\n          ? visibility && (\n              <div className={s.inputFileWrapper}>\n                <input className={s.inputFile} type=\"file\" onChange={avatarSelected} />\n              </div>\n            )\n          : null}\n      </div>\n      <div className={s.infoContainer}>\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} editMode={editMode} />\n        {editMode ? (\n          <ProfileDataForm onSubmit={onSubmit} initialValues={profile} profile={profile} setEditMode={setEditMode} />\n        ) : (\n          <ProfileData profile={profile} isOwner={isOwner} meId={meId} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ProfileData = ({ profile }) => {\n  return (\n    <div>\n      <div className={s.categoryName}>\n        <span className={styles.input}>Full name:</span>\n        {profile.fullName}\n      </div>\n      <div className={s.categoryName}>\n        <span className={styles.input}>About me:</span>\n        {profile.aboutMe || \"there is no information about me\"}\n      </div>\n      <div className={s.categoryName}>\n        <span className={styles.input}>Looking for a job:</span> {profile.lookingForAJob ? \"yes\" : \"no\"}\n      </div>\n      {profile.lookingForAJob && (\n        <div className={s.categoryName}>\n          <span className={styles.input}>Professional skills:</span> {profile.lookingForAJobDescription}\n        </div>\n      )}\n      <div className={s.categoryName}>\n        <span className={styles.input}>Contacts:</span>\n        {Object.keys(profile.contacts).map((key) => {\n          return <Contact key={key} contactName={key} contactValue={profile.contacts[key]} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst Contact = ({ contactName, contactValue }) => {\n  return (\n    <div className={s.contact}>\n      <span className={styles.input}>{contactName}:</span> {contactValue}\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport s from \"./Post.module.css\";\nimport usersPhoto from \"./../../../../assets/images/defaultuser.png\";\n\nconst Post = (props) => {\n  return (\n    <div className={s.item}>\n      <img src={props.profile.photos.small ? props.profile.photos.small : usersPhoto} alt=\"\" />\n      <div className={s.postWriterInformation}>\n        <div className={s.writerName}>{props.profile.fullName}</div>\n        <div>{props.message}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport { required } from \"../../../utils/validators/validator\";\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\n\nconst AddPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          placeholder=\"Write a post...\"\n          name=\"post\"\n          component={Textarea}\n          validate={[required]}\n          className={s.textarea}\n        />\n      </div>\n      <div className={s.buttonWrapper}>\n        <button className={s.commonButton}>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nconst TextAreaReduxForm = reduxForm({\n  form: \"addPost\",\n})(AddPostForm);\n\nconst MyPosts = React.memo(({ addPost, posts, profile }) => {\n  const onSubmit = (formData, dispatch) => {\n    addPost(formData.post);\n    dispatch(reset(\"addPost\"));\n  };\n  let postsElements = posts.map((elem) => (\n    <Post message={elem.message} likesCount={elem.likesCount} key={elem.id} profile={profile} />\n  ));\n  return (\n    <div>\n      <h3 className={s.myPostsName}>My posts</h3>\n      <TextAreaReduxForm onSubmit={onSubmit} />\n      <div className={s.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nexport default MyPosts;\n","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (formData) => {\n      let action = addPostActionCreator(formData);\n      dispatch(action);\n    },\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n    profile: state.profilePage.profile,\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport Preloader from \"../Common/Preaolader/Preloader\";\n\nconst Profile = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  meId,\n  changeAvatar,\n  saveProfile,\n  editMode,\n  setEditMode,\n}) => {\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <ProfileInfo\n        profile={profile}\n        status={status}\n        updateStatus={updateStatus}\n        isOwner={isOwner}\n        meId={meId}\n        changeAvatar={changeAvatar}\n        saveProfile={saveProfile}\n        editMode={editMode}\n        setEditMode={setEditMode}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  changeAvatar,\n  getStatus,\n  getUserProfile,\n  saveProfile,\n  setUserProfile,\n  updateStatus,\n} from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { setEditMode } from \"../../redux/auth-reducer\";\n\n\nclass ProfileContainer extends React.Component {\n  getProfile() {\n    let newUserId = this.props.match.params.userId;\n    newUserId = Number(newUserId);\n    if (!newUserId) {\n      newUserId = this.props.meId;\n\n      if (!newUserId) {\n        return this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getUserProfile(newUserId);\n    this.props.getStatus(newUserId);\n  }\n\n  componentDidMount() {\n    this.getProfile();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.getProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        isOwner={Number(this.props.match.params.userId)}\n        meId={this.props.meId}\n        profile={this.props.profile}\n        aboutMe={this.props.aboutMe}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n        changeAvatar={this.props.changeAvatar}\n        saveProfile={this.props.saveProfile}\n        editMode={this.props.editMode}\n        setEditMode={this.props.setEditMode}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    meId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n    editMode: state.auth.editMode,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    setUserProfile,\n    getUserProfile,\n    getStatus,\n    updateStatus,\n    changeAvatar,\n    saveProfile,\n    setEditMode,\n  }),\n  withRouter\n)(ProfileContainer);\n"],"sourceRoot":""}