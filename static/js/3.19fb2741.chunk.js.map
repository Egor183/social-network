{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","value","currentTarget","ProfileInfo","profile","isOwner","meId","changeAvatar","Preloader","className","s","descriptionBlock","userAvatar","src","photos","large","UserAvatar","alt","type","target","files","length","aboutMe","Post","item","message","likesCount","maxLength10","maxLengthCreator","TextAreaReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","MyPosts","React","memo","addPost","postsElements","posts","map","elem","key","id","postsBlock","formData","post","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","action","addPostActionCreator","Profile","ProfileContainer","newUserId","this","match","params","userId","Number","history","push","getUserProfile","getStatus","getProfile","prevProps","Component","compose","auth","isAuth","setUserProfile","withRouter"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,WAAa,kC,oBCAxFD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,+HCwCVC,EAvCgB,SAACC,GAAW,IAAD,EACVC,oBAAS,GADC,mBACnCC,EADmC,KACzBC,EADyB,OAEdF,mBAASD,EAAMI,QAFD,mBAEnCA,EAFmC,KAE3BC,EAF2B,KAuBxC,OALAC,qBAAU,WACRD,EAAUL,EAAMI,UACf,CAACJ,EAAMI,SAIR,8BACIF,GACA,6BACE,0BAAMK,cAvBW,WACvBJ,GAAY,KAsBkCH,EAAMI,QAAU,8BAG3DF,GACC,6BACE,2BAAOM,WAAW,EAAMC,OAxBL,WACzBN,GAAY,GACZH,EAAMU,aAAaN,IAsBuCO,SAnBrC,SAACC,GACtB,IAAIC,EAAQD,EAAEE,cAAcD,MAC5BR,EAAUQ,IAiB0EA,MAAgB,OAATT,EAAgBA,EAAS,sB,kBCNzGW,EAvBK,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,QAASZ,EAAwD,EAAxDA,OAAQM,EAAgD,EAAhDA,aAAcO,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACnE,IAAKH,EACH,OAAO,kBAACI,EAAA,EAAD,MAST,OACE,6BACE,yBAAKC,UAAWC,IAAEC,kBAChB,yBAAKF,UAAWC,IAAEE,WAAYC,IAAKT,EAAQU,OAAOC,OAASC,IAAYC,IAAI,6BAC3E,kBAAC,EAAD,CAAwBzB,OAAQA,EAAQM,aAAcA,IACrDO,IAAYC,EAAO,2BAAOY,KAAK,OAAOnB,SAXtB,SAACC,GAClBA,EAAEmB,OAAOC,MAAMC,QACjBd,EAAaP,EAAEmB,OAAOC,MAAM,OAS4C,KACtE,2BAAIhB,EAAQkB,SAAW,uC,4CCHhBC,EAhBF,SAACnC,GACZ,OACE,yBAAKqB,UAAWC,IAAEc,MAChB,yBACEX,IAAI,wGACJI,IAAI,KAEL7B,EAAMqC,QACP,6BACE,uCACCrC,EAAMsC,c,iCCNTC,EAAcC,YAAiB,IAe/BC,EAAoBC,YAAU,CAClCC,KAAM,WADkBD,EAbN,SAAC1C,GACnB,OACE,0BAAM4C,SAAU5C,EAAM6C,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAOC,YAAY,YAAYC,KAAK,OAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUb,MAEvF,6BACE,iDAyBOc,EAfCC,IAAMC,MAAK,YAAyB,IAAtBC,EAAqB,EAArBA,QAIxBC,EAJ6C,EAAZC,MAIXC,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAMvB,QAASuB,EAAKvB,QAASC,WAAYsB,EAAKtB,WAAYuB,IAAKD,EAAKE,QAC5G,OACE,yBAAKzC,UAAWC,IAAEyC,YAChB,wCACA,kBAACtB,EAAD,CAAmBG,SAPN,SAACoB,GAChBR,EAAQQ,EAASC,SAOf,0CACA,yBAAK5C,UAAWC,IAAEoC,OAAQD,O,QCdjBS,EAFUC,aAPD,SAACC,GACvB,MAAO,CACLV,MAAOU,EAAMC,YAAYX,MACzBY,YAAaF,EAAMC,YAAYC,gBAZR,SAACC,GAC1B,MAAO,CACLf,QAAS,SAACQ,GACR,IAAIQ,EAASC,YAAqBT,GAClCO,EAASC,OAYUL,CAA6Cd,GCCvDqB,EAjBC,SAAC,GAAqE,IAAnE1D,EAAkE,EAAlEA,QAAUZ,EAAwD,EAAxDA,OAAQM,EAAgD,EAAhDA,aAAcO,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAEhE,OACE,6BACE,kBAAC,EAAD,CACEH,QAASA,EACTZ,OAAQA,EACRM,aAAcA,EACdO,QAASA,EACTC,KAAMA,EACNC,aAAcA,IAEhB,kBAAC,EAAD,Q,cCTAwD,E,2KAEF,IAAIC,EAAYC,KAAK7E,MAAM8E,MAAMC,OAAOC,OAExC,KADAJ,EAAYK,OAAOL,OAEjBA,EAAYC,KAAK7E,MAAMkB,MAGrB,OAAO2D,KAAK7E,MAAMkF,QAAQC,KAAK,UAGnCN,KAAK7E,MAAMoF,eAAeR,GAC1BC,KAAK7E,MAAMqF,UAAUT,K,0CAIrBC,KAAKS,e,yCAGYC,GACbV,KAAK7E,MAAM8E,MAAMC,OAAOC,QAAUO,EAAUT,MAAMC,OAAOC,QAC3DH,KAAKS,e,+BAMP,OACE,kBAAC,EAAD,iBACMT,KAAK7E,MADX,CAEEiB,QAASgE,OAAOJ,KAAK7E,MAAM8E,MAAMC,OAAOC,QACxC9D,KAAM2D,KAAK7E,MAAMkB,KACjBF,QAAS6D,KAAK7E,MAAMgB,QACpBkB,QAAS2C,KAAK7E,MAAMkC,QACpB9B,OAAQyE,KAAK7E,MAAMI,OACnBM,aAAcmE,KAAK7E,MAAMU,aACzBS,aAAc0D,KAAK7E,MAAMmB,oB,GApCFmC,IAAMkC,WAmDtBC,sBACbtB,aAVoB,SAACC,GACrB,MAAO,CACLpD,QAASoD,EAAMC,YAAYrD,QAC3BZ,OAAQgE,EAAMC,YAAYjE,OAC1Bc,KAAMkD,EAAMsB,KAAKV,OACjBW,OAAQvB,EAAMsB,KAAKC,UAKI,CACvBC,mBACAR,mBACAC,cACA3E,iBACAS,mBAEF0E,IARaJ,CASbd","file":"static/js/3.19fb2741.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3hRaE\",\"userAvatar\":\"ProfileInfo_userAvatar__1Lg6K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3m8L_\",\"posts\":\"MyPosts_posts__3J07l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2GrpW\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    let value = e.currentTarget.value;\r\n    setStatus(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"your statue could be here\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status!==null ? status : \"your status...\"} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../Common/Preaolader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport UserAvatar from \"../../../assets/images/1505926268182046858.png\";\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, meId, changeAvatar }) => {\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  const avatarSelected = (e) => {\n    if (e.target.files.length) {\n      changeAvatar(e.target.files[0]);\n    }\n  };\n\n  return (\n    <div>\n      <div className={s.descriptionBlock}>\n        <img className={s.userAvatar} src={profile.photos.large || UserAvatar} alt=\"фото\" />\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n        {isOwner === meId ? <input type=\"file\" onChange={avatarSelected} /> : null}\n        <p>{profile.aboutMe || \"there is no information about me\"}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRkUm8Lemuzy9dc-h2pqUD6pawuW0QK_bKwxg&usqp=CAU\"\r\n        alt=\"\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>like:</span>\r\n        {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field placeholder=\"Send post\" name=\"post\" component={Textarea} validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst TextAreaReduxForm = reduxForm({\r\n  form: \"addPost\",\r\n})(AddPostForm);\r\n\r\nconst MyPosts = React.memo(({ addPost, posts }) => {\r\n  const onSubmit = (formData) => {\r\n    addPost(formData.post);\r\n  };\r\n  let postsElements = posts.map((elem) => <Post message={elem.message} likesCount={elem.likesCount} key={elem.id} />);\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <TextAreaReduxForm onSubmit={onSubmit} />\r\n      <div>New posts</div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (formData) => {\r\n      let action = addPostActionCreator(formData);\r\n      dispatch(action);\r\n    },\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = ({ profile,  status, updateStatus, isOwner, meId, changeAvatar }) => {\n\n  return (\n    <div>\n      <ProfileInfo\n        profile={profile}\n        status={status}\n        updateStatus={updateStatus}\n        isOwner={isOwner}\n        meId={meId}\n        changeAvatar={changeAvatar}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { changeAvatar, getStatus, getUserProfile, setUserProfile, updateStatus } from \"../../redux/profile-reducer\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  getProfile() {\n    let newUserId = this.props.match.params.userId;\n    newUserId = Number(newUserId);\n    if (!newUserId) {\n      newUserId = this.props.meId;\n\n      if (!newUserId) {\n        return this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getUserProfile(newUserId);\n    this.props.getStatus(newUserId);\n  }\n\n  componentDidMount() {\n    this.getProfile();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.getProfile();\n    }\n  }\n\n  render() {\n\n    return (\n      <Profile\n        {...this.props}\n        isOwner={Number(this.props.match.params.userId)}\n        meId={this.props.meId}\n        profile={this.props.profile}\n        aboutMe={this.props.aboutMe}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n        changeAvatar={this.props.changeAvatar}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    meId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    setUserProfile,\n    getUserProfile,\n    getStatus,\n    updateStatus,\n    changeAvatar,\n  }),\n  withRouter\n)(ProfileContainer);\n"],"sourceRoot":""}